---
export interface Project {
  name: string;
  description: string;
  svn_url: string;
  stargazers_count: number;
  languages?: { name: string; percentage: string }[];
  pushed_at: string;
}

const { name, description, svn_url, stargazers_count, languages, pushed_at } = Astro.props;

// Format the updated time
const updatedTime = new Date(pushed_at).toLocaleString("en-US", {
  day: "numeric",
  month: "long",
  year: "numeric",
});
---
<div class="card">
  <div class="card-body">
    <h3 class="card-title">{name}</h3>
    <p class="card-description">{description || "No description available."}</p>

    <div class="card-buttons">
      <a href={`${svn_url}/archive/master.zip`} class="btn btn-primary">Clone</a>
      <a href={svn_url} target="_blank" rel="noopener noreferrer" class="btn btn-secondary">Repo</a>
    </div>

    <hr />

    {languages?.length > 0 && (
      <div class="card-languages">
        <div class="language-list">
          {languages.map(({ name, percentage }) => (
            <div class="language-card">
              <span class="language-name">{name}</span>
              <span class="language-percentage">{percentage}%</span>
            </div>
          ))}
        </div>
      </div>
    )}

    <div class="card-footer">
      <span><svg class="star-icon" viewBox="0 0 16 16" width="16" height="16">
        <path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z"></path>
      </svg> {stargazers_count}</span>
      <span>Updated on {updatedTime}</span>
    </div>
  </div>
</div>

<style>
.card {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 
              0 4px 6px -2px rgba(0, 0, 0, 0.05);
  padding: 1.25rem; /* Reduced from 1.5rem */
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  height: fit-content;
}

.card-body {
  display: flex;
  flex-direction: column;
  gap: 0.75rem; /* Reduced from 1rem */
}
.card-title {
  font-size: 1.25rem;
}
.card-description {
  color: #555;
}
.card-buttons {
  display: flex;
  gap: 0.5rem;
}
.btn {
  padding: 0.375rem 0.75rem; /* Reduced from 0.5rem 1rem */
  border-radius: 6px;
  font-weight: 500;
  text-decoration: none;
  transition: background-color 0.2s;
}

.btn-primary {
  background-color: #2563eb;
  color: white;
}

.btn-secondary {
  background-color: #e5e7eb;
  color: #374151;
}

.btn:hover {
  opacity: 0.9;
}

.card-languages .badge {
  padding: .25rem;
}

.language-list {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.language-card {
  background-color: #f3f4f6;
  border-radius: 6px;
  padding: 0.15rem 0.5rem;
  display: flex;
  align-items: center;
  min-width: 80px;
}

.language-name {
  font-size: 0.875rem;
  font-weight: 500;
  color: #374151;
  padding: 0.2rem; /* Reduced from 0.25rem */
}

.language-percentage {
  font-size: 0.875rem;
  color: #6b7280;
}

.card-footer {
  margin-top: auto;
  padding-top: 0.75rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.875rem;
  color: #6b7280;
}

.card-footer span:last-child {
  font-style: italic;
  margin-left: 1rem;
}

.star-icon {
  fill: #fbbf24;
  vertical-align: -0.125em;
  margin-right: 0.25rem;
  display: inline-block;
}

hr {
  border: none;
  border-top: 1px solid #e5e7eb;
}
</style>
